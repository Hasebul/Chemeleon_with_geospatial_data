{"pid": "16", "example": {"question": "Some friends discussed the sizes of their coin collections. What is the mean of the numbers?", "choices": null, "answer": "84", "unit": null, "table_title": "Coin collections", "table": "Name | Number of coins\nBraden | 76\nCamilla | 94\nRick | 86\nMary | 84\nHector | 80\nDevin | 83\nEmily | 82\nAvery | 87", "table_for_pd": {"Name": ["Braden", "Camilla", "Rick", "Mary", "Hector", "Devin", "Emily", "Avery"], "Number of coins": ["76", "94", "86", "84", "80", "83", "82", "87"]}, "row_num": 9, "column_num": 2, "solution": "Read the numbers from the table.\n\n76, 94, 86, 84, 80, 83, 82, 87\n\nFirst, count how many numbers are in the group.\n\nThere are 8 numbers.\n\nNow add all the numbers together:\n\n76 + 94 + 86 + 84 + 80 + 83 + 82 + 87 = 672\n\nNow divide the sum by the number of numbers:\n\n672 \u00f7 8 = 84\n\nThe mean is 84.", "ques_type": "free_text", "ans_type": "integer_number", "grade": 5, "split": "test", "context": "Knowledge:\n- The mean, also known as the average, is calculated by adding up all the numbers and then dividing by the total number of values.\n- In this context, the mean of the numbers represents the average number of coins in each friend's collection."}, "modules:input": "Table:\nName | Number of coins\nBraden | 76\nCamilla | 94\nRick | 86\nMary | 84\nHector | 80\nDevin | 83\nEmily | 82\nAvery | 87\n\nQuestion: Some friends discussed the sizes of their coin collections. What is the mean of the numbers?\n\nModules: ", "modules:output": ["knowledge_retrieval", "program_generator_and_verifier", "program_executor", "answer_generator"], "knowledge_retrieval:input": "Table:\n\nName | Number of coins\nBraden | 76\nCamilla | 94\nRick | 86\nMary | 84\nHector | 80\nDevin | 83\nEmily | 82\nAvery | 87\n\nQuestion: Some friends discussed the sizes of their coin collections. What is the mean of the numbers?\n\nKnowledge:\n", "knowledge_retrieval:output": "- The mean, also known as the average, is calculated by adding up all the numbers and then dividing by the total number of values.\n- In this context, the mean of the numbers represents the average number of coins in each friend's collection.", "program": "number_of_coins_for_different_person = [76, 94, 86, 84, 80, 83, 82, 87]\nans = sum(number_of_coins_for_different_person) / len(number_of_coins_for_different_person)", "program_generator_and_verifier:input": "Read the following table regarding Coin collections and then write Python code to answer a question:\n\nName | Number of coins\nBraden | 76\nCamilla | 94\nRick | 86\nMary | 84\nHector | 80\nDevin | 83\nEmily | 82\nAvery | 87\n\nKnowledge:\n- The mean, also known as the average, is calculated by adding up all the numbers and then dividing by the total number of values.\n- In this context, the mean of the numbers represents the average number of coins in each friend's collection.\n\nSome friends discussed the sizes of their coin collections. What is the mean of the numbers?\n\n# Python Code, return 'ans'. Make sure that 'ans' is a number", "program_generator_and_verifier:output": "number_of_coins_for_different_person = [76, 94, 86, 84, 80, 83, 82, 87]\nans = sum(number_of_coins_for_different_person) / len(number_of_coins_for_different_person)", "program_executor:output": 84.0, "answer_generator:input": 84.0, "answer_generator:output": 84.0, "prediction": 84.0, "prediction_norm": 84.0, "answer_norm": 84.0, "true_false": true}
{"pid": "54", "example": {"question": "Look at the table. Then answer the question. At a price of $155, is there a shortage or a surplus?", "choices": ["shortage", "surplus"], "answer": "shortage", "unit": null, "table_title": null, "table": "Price | Quantity demanded | Quantity supplied\n$155 | 22,600 | 5,800", "table_for_pd": {"Price": ["$155", "$275", "$395", "$515", "$635"], "Quantity demanded": ["22,600", "20,500", "18,400", "16,300", "14,200"], "Quantity supplied": ["5,800", "9,400", "13,000", "16,600", "20,200"]}, "row_num": 6, "column_num": 3, "solution": "At the price of $155, the quantity demanded is greater than the quantity supplied. There is not enough of the good or service for sale at that price. So, there is a shortage.\n", "ques_type": "multi_choice", "ans_type": "boolean_text", "grade": 5, "split": "test"}, "modules:input": "Table:\nPrice | Quantity demanded | Quantity supplied\n$155 | 22,600 | 5,800\n$275 | 20,500 | 9,400\n$395 | 18,400 | 13,000\n$515 | 16,300 | 16,600\n$635 | 14,200 | 20,200\n\nQuestion: Look at the table. Then answer the question. At a price of $155, is there a shortage or a surplus?\n\nModules: ", "modules:output": ["row_lookup", "program_generator_and_verifier", "program_executor", "answer_generator"], "row_lookup:input": "Question: Look at the table. Then answer the question. At a price of $155, is there a shortage or a surplus?\n\nTable:\nPrice | Quantity demanded | Quantity supplied\n$155 | 22,600 | 5,800\n$275 | 20,500 | 9,400\n$395 | 18,400 | 13,000\n$515 | 16,300 | 16,600\n$635 | 14,200 | 20,200\n\nSimplified Table:\n", "row_lookup:output": "Price | Quantity demanded | Quantity supplied\n$155 | 22,600 | 5,800", "program": "quantity_demanded_at_price_155 = 22600\nquantity_supplied_at_price_155 = 5800\nif quantity_demanded_at_price_155 > quantity_supplied_at_price_155:\n    ans = 'shortage'\nelse:\n    ans = 'surplus'", "program_generator_and_verifier:input": "Read the following table and then write Python code to answer a question:\n\nPrice | Quantity demanded | Quantity supplied\n$155 | 22,600 | 5,800\n\nLook at the table. Then answer the question. At a price of $155, is there a shortage or a surplus? Please select from the following options: ['shortage', 'surplus'].\n\n# Python Code, return 'ans'. Make sure that 'ans' is a string selected from the options in the question", "program_generator_and_verifier:output": "quantity_demanded_at_price_155 = 22600\nquantity_supplied_at_price_155 = 5800\nif quantity_demanded_at_price_155 > quantity_supplied_at_price_155:\n    ans = 'shortage'\nelse:\n    ans = 'surplus'", "program_executor:output": "shortage", "answer_generator:input": "shortage", "answer_generator:output": "shortage", "prediction": "shortage", "prediction_norm": "shortage", "answer_norm": "shortage", "true_false": true}
{"pid": "82", "example": {"question": "A restaurant's average food preparation time was tracked from day to day as part of an efficiency improvement program. According to the table, what was the rate of change between Wednesday and Thursday?", "choices": null, "answer": "3", "unit": "minutes per day", "table_title": "Average food preparation time", "table": "Day | Food preparation time (minutes)\nMonday | 25\nTuesday | 27\nWednesday | 18\nThursday | 21\nFriday | 27", "table_for_pd": {"Day": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"], "Food preparation time (minutes)": ["25", "27", "18", "21", "27"]}, "row_num": 6, "column_num": 2, "solution": "Plug the numbers into the formula for rate of change and simplify.\nRate of change\n = \\frac{change in value}{change in time}\n = \\frac{21 minutes - 18 minutes}{1 day}\n = \\frac{3 minutes}{1 day}\n = 3 minutes per day\nThe rate of change between Wednesday and Thursday was 3 minutes per day.", "ques_type": "free_text", "ans_type": "integer_number", "grade": 8, "split": "test"}, "modules:input": "Table:\nDay | Food preparation time (minutes)\nMonday | 25\nTuesday | 27\nWednesday | 18\nThursday | 21\nFriday | 27\n\nQuestion: A restaurant's average food preparation time was tracked from day to day as part of an efficiency improvement program. According to the table, what was the rate of change between Wednesday and Thursday?\n\nModules: ", "modules:output": ["row_lookup", "program_generator_and_verifier", "program_executor", "answer_generator"], "row_lookup:input": null, "row_lookup:output": "Day | Food preparation time (minutes)\nMonday | 25\nTuesday | 27\nWednesday | 18\nThursday | 21\nFriday | 27", "program": "food_preparation_times = [25, 27, 18, 21, 27]\nwednesday_time = food_preparation_times[2]\nthursday_time = food_preparation_times[3]\nans = thursday_time - wednesday_time\n\nprint(ans)", "program_generator_and_verifier:input": "Read the following table regarding Average food preparation time and then write Python code to answer a question:\n\nDay | Food preparation time (minutes)\nMonday | 25\nTuesday | 27\nWednesday | 18\nThursday | 21\nFriday | 27\n\nA restaurant's average food preparation time was tracked from day to day as part of an efficiency improvement program. According to the table, what was the rate of change between Wednesday and Thursday? (Unit: minutes per day)\n\n# Python Code, return 'ans'. Make sure that 'ans' is a number", "program_generator_and_verifier:output": "food_preparation_times = [25, 27, 18, 21, 27]\nwednesday_time = food_preparation_times[2]\nthursday_time = food_preparation_times[3]\nans = thursday_time - wednesday_time\n\nprint(ans)", "program_executor:output": 3, "answer_generator:input": 3, "answer_generator:output": 3.0, "prediction": 3.0, "prediction_norm": 3.0, "answer_norm": 3.0, "true_false": true}
{"pid": "123", "example": {"question": "Erik has $7,616.00. How much money will Erik have left if he buys a parrot and a kinkajou?", "choices": null, "answer": "4,656", "unit": "$", "table_title": null, "table": "alpaca | $1,605.00\nkinkajou | $1,837.00\npython | $8,343.00\nparrot | $1,123.00\nmacaw | $1,629.00", "table_for_pd": {"Column 1": ["alpaca", "kinkajou", "python", "parrot", "macaw"], "Column 2": ["$1,605.00", "$1,837.00", "$8,343.00", "$1,123.00", "$1,629.00"]}, "row_num": 5, "column_num": 2, "solution": "Find the total cost of a parrot and a kinkajou.\n\n$1,123.00 + $1,837.00 = $2,960.00\n\nNow subtract the total cost from the starting amount.\n\n$7,616.00 - $2,960.00 = $4,656.00\n\nErik will have $4,656.00 left.", "ques_type": "free_text", "ans_type": "integer_number", "grade": 4, "split": "test"}, "modules:input": "Table:\nalpaca | $1,605.00\nkinkajou | $1,837.00\npython | $8,343.00\nparrot | $1,123.00\nmacaw | $1,629.00\n\nQuestion: Erik has $7,616.00. How much money will Erik have left if he buys a parrot and a kinkajou?\n\nModules: ", "modules:output": ["row_lookup", "program_generator_and_verifier", "program_executor", "answer_generator"], "row_lookup:input": null, "row_lookup:output": "alpaca | $1,605.00\nkinkajou | $1,837.00\npython | $8,343.00\nparrot | $1,123.00\nmacaw | $1,629.00", "program": "parrot_price = 1123\nkinkajou_price = 1837\nerik_money = 7616\ntotal_cost = parrot_price + kinkajou_price\nans = erik_money - total_cost", "program_generator_and_verifier:input": "Read the following table and then write Python code to answer a question:\n\nalpaca | $1,605.00\nkinkajou | $1,837.00\npython | $8,343.00\nparrot | $1,123.00\nmacaw | $1,629.00\n\nErik has $7,616.00. How much money will Erik have left if he buys a parrot and a kinkajou? (Unit: $)\n\n# Python Code, return 'ans'. Make sure that 'ans' is a number", "program_generator_and_verifier:output": "parrot_price = 1123\nkinkajou_price = 1837\nerik_money = 7616\ntotal_cost = parrot_price + kinkajou_price\nans = erik_money - total_cost", "program_executor:output": 4656, "answer_generator:input": 4656, "answer_generator:output": 4656.0, "prediction": 4656.0, "prediction_norm": 4656.0, "answer_norm": 4656.0, "true_false": true}
{"pid": "246", "example": {"question": "Roxanne has $32.50. Does she have enough to buy a CD and a blender?", "choices": ["yes", "no"], "answer": "yes", "unit": null, "table_title": null, "table": "blender | $14.02\nCD | $18.35\ncomputer mouse | $10.65\nCD player | $21.84\nDVD player | $53.57\nradio | $15.42", "table_for_pd": {"Column 1": ["blender", "CD", "computer mouse", "CD player", "DVD player", "radio"], "Column 2": ["$14.02", "$18.35", "$10.65", "$21.84", "$53.57", "$15.42"]}, "row_num": 6, "column_num": 2, "solution": "Add the price of a CD and the price of a blender:\n\n$18.35 + $14.02 = $32.37\n\n$32.37 is less than $32.50. Roxanne does have enough money.", "ques_type": "multi_choice", "ans_type": "boolean_text", "grade": 7, "split": "test"}, "modules:input": "Table:\nblender | $14.02\nCD | $18.35\ncomputer mouse | $10.65\nCD player | $21.84\nDVD player | $53.57\nradio | $15.42\n\nQuestion: Roxanne has $32.50. Does she have enough to buy a CD and a blender?\n\nModules: ", "modules:output": ["program_generator_and_verifier", "program_executor", "answer_generator"], "program": "blender_price = 14.02\nCD_price = 18.35\ntotal_money = 32.50\nif total_money > blender_price + CD_price:\n    ans = 'yes'\nelse:\n    ans = 'no'", "program_generator_and_verifier:input": "Read the following table and then write Python code to answer a question:\n\nblender | $14.02\nCD | $18.35\ncomputer mouse | $10.65\nCD player | $21.84\nDVD player | $53.57\nradio | $15.42\n\nRoxanne has $32.50. Does she have enough to buy a CD and a blender? Please select from the following options: ['yes', 'no'].\n\n# Python Code, return 'ans'. Make sure that 'ans' is a string selected from the options in the question", "program_generator_and_verifier:output": "blender_price = 14.02\nCD_price = 18.35\ntotal_money = 32.50\nif total_money > blender_price + CD_price:\n    ans = 'yes'\nelse:\n    ans = 'no'", "program_executor:output": "yes", "answer_generator:input": "yes", "answer_generator:output": "yes", "prediction": "yes", "prediction_norm": "yes", "answer_norm": "yes", "true_false": true}
{"pid": "250", "example": {"question": "Fans of the Kingwood baseball team compared the number of games won by their team each year. According to the table, what was the rate of change between 2009 and 2010?", "choices": null, "answer": "7", "unit": "games per year", "table_title": "Games won by the Kingwood baseball team", "table": "Year | Games won\n2009 | 39\n2010 | 46\n2011 | 36\n2012 | 44\n2013 | 44", "table_for_pd": {"Year": ["2009", "2010", "2011", "2012", "2013"], "Games won": ["39", "46", "36", "44", "44"]}, "row_num": 6, "column_num": 2, "solution": "Plug the numbers into the formula for rate of change and simplify.\nRate of change\n = \\frac{change in value}{change in time}\n = \\frac{46 games - 39 games}{2010 - 2009}\n = \\frac{46 games - 39 games}{1 year}\n = \\frac{7 games}{1 year}\n = 7 games per year\nThe rate of change between 2009 and 2010 was 7 games per year.", "ques_type": "free_text", "ans_type": "integer_number", "grade": 8, "split": "test", "context": "Knowledge:\n- Rate of change is calculated by finding the difference in the values of the dependent variable (games won) divided by the difference in the values of the independent variable (year).\n- In this case, the rate of change between 2009 and 2010 would be calculated as (46-39)/(2010-2009) to determine how many games were won on average per year."}, "modules:input": "Table:\nYear | Games won\n2009 | 39\n2010 | 46\n2011 | 36\n2012 | 44\n2013 | 44\n\nQuestion: Fans of the Kingwood baseball team compared the number of games won by their team each year. According to the table, what was the rate of change between 2009 and 2010?\n\nModules: ", "modules:output": ["knowledge_retrieval", "program_generator_and_verifier", "program_executor", "answer_generator"], "knowledge_retrieval:input": "Table:\n\nYear | Games won\n2009 | 39\n2010 | 46\n2011 | 36\n2012 | 44\n2013 | 44\n\nQuestion: Fans of the Kingwood baseball team compared the number of games won by their team each year. According to the table, what was the rate of change between 2009 and 2010?\n\nKnowledge:\n", "knowledge_retrieval:output": "- Rate of change is calculated by finding the difference in the values of the dependent variable (games won) divided by the difference in the values of the independent variable (year).\n- In this case, the rate of change between 2009 and 2010 would be calculated as (46-39)/(2010-2009) to determine how many games were won on average per year.", "program": "games_won = [39, 46, 36, 44, 44]\nyears = [2009, 2010, 2011, 2012, 2013]\nrate_of_change = (games_won[1] - games_won[0]) / (years[1] - years[0])\nans = rate_of_change", "program_generator_and_verifier:input": "Read the following table regarding Games won by the Kingwood baseball team and then write Python code to answer a question:\n\nYear | Games won\n2009 | 39\n2010 | 46\n2011 | 36\n2012 | 44\n2013 | 44\n\nKnowledge:\n- Rate of change is calculated by finding the difference in the values of the dependent variable (games won) divided by the difference in the values of the independent variable (year).\n- In this case, the rate of change between 2009 and 2010 would be calculated as (46-39)/(2010-2009) to determine how many games were won on average per year.\n\nFans of the Kingwood baseball team compared the number of games won by their team each year. According to the table, what was the rate of change between 2009 and 2010? (Unit: games per year)\n\n# Python Code, return 'ans'. Make sure that 'ans' is a number", "program_generator_and_verifier:output": "games_won = [39, 46, 36, 44, 44]\nyears = [2009, 2010, 2011, 2012, 2013]\nrate_of_change = (games_won[1] - games_won[0]) / (years[1] - years[0])\nans = rate_of_change", "program_executor:output": 7.0, "answer_generator:input": 7.0, "answer_generator:output": 7.0, "prediction": 7.0, "prediction_norm": 7.0, "answer_norm": 7.0, "true_false": true}
{"pid": "333", "example": {"question": "A farm equipment company kept a record of the number of tractors made each month. What is the mean of the numbers?", "choices": null, "answer": "94", "unit": null, "table_title": "Tractors made", "table": "Month | Number of tractors\nFebruary | 97\nMarch | 93\nApril | 90\nMay | 90\nJune | 98\nJuly | 96\nAugust | 90\nSeptember | 98", "table_for_pd": {"Month": ["February", "March", "April", "May", "June", "July", "August", "September"], "Number of tractors": ["97", "93", "90", "90", "98", "96", "90", "98"]}, "row_num": 9, "column_num": 2, "solution": "Read the numbers from the table.\n\n97, 93, 90, 90, 98, 96, 90, 98\n\nFirst, count how many numbers are in the group.\n\nThere are 8 numbers.\n\nNow add all the numbers together:\n\n97 + 93 + 90 + 90 + 98 + 96 + 90 + 98 = 752\n\nNow divide the sum by the number of numbers:\n\n752 \u00f7 8 = 94\n\nThe mean is 94.", "ques_type": "free_text", "ans_type": "integer_number", "grade": 5, "split": "test", "context": "Knowledge:\n- The mean, also known as the average, is calculated by adding up all the numbers and then dividing by the total number of values.\n- In this context, the mean of the numbers represents the average number of tractors made each month by the farm equipment company."}, "modules:input": "Table:\nMonth | Number of tractors\nFebruary | 97\nMarch | 93\nApril | 90\nMay | 90\nJune | 98\nJuly | 96\nAugust | 90\nSeptember | 98\n\nQuestion: A farm equipment company kept a record of the number of tractors made each month. What is the mean of the numbers?\n\nModules: ", "modules:output": ["knowledge_retrieval", "program_generator_and_verifier", "program_executor", "answer_generator"], "knowledge_retrieval:input": "Table:\n\nMonth | Number of tractors\nFebruary | 97\nMarch | 93\nApril | 90\nMay | 90\nJune | 98\nJuly | 96\nAugust | 90\nSeptember | 98\n\nQuestion: A farm equipment company kept a record of the number of tractors made each month. What is the mean of the numbers?\n\nKnowledge:\n", "knowledge_retrieval:output": "- The mean, also known as the average, is calculated by adding up all the numbers and then dividing by the total number of values.\n- In this context, the mean of the numbers represents the average number of tractors made each month by the farm equipment company.", "program": "number_of_tractors_made = [97, 93, 90, 90, 98, 96, 90, 98]\nans = sum(number_of_tractors_made) / len(number_of_tractors_made)", "program_generator_and_verifier:input": "Read the following table regarding Tractors made and then write Python code to answer a question:\n\nMonth | Number of tractors\nFebruary | 97\nMarch | 93\nApril | 90\nMay | 90\nJune | 98\nJuly | 96\nAugust | 90\nSeptember | 98\n\nKnowledge:\n- The mean, also known as the average, is calculated by adding up all the numbers and then dividing by the total number of values.\n- In this context, the mean of the numbers represents the average number of tractors made each month by the farm equipment company.\n\nA farm equipment company kept a record of the number of tractors made each month. What is the mean of the numbers?\n\n# Python Code, return 'ans'. Make sure that 'ans' is a number", "program_generator_and_verifier:output": "number_of_tractors_made = [97, 93, 90, 90, 98, 96, 90, 98]\nans = sum(number_of_tractors_made) / len(number_of_tractors_made)", "program_executor:output": 94.0, "answer_generator:input": 94.0, "answer_generator:output": 94.0, "prediction": 94.0, "prediction_norm": 94.0, "answer_norm": 94.0, "true_false": true}
{"pid": "385", "example": {"question": "A philanthropic organization compared the amounts of money that its members donated to certain causes. How much more money did Eve donate to clean water than Eli?", "choices": null, "answer": "10", "unit": "$", "table_title": "Donations", "table": "Person | Clean water\nEve | $15\nEli | $5\nBridgette | $11\nKamal | $11\nJanelle | $13", "table_for_pd": {"Person": ["Eve", "Eli", "Bridgette", "Kamal", "Janelle"], "Animal rights": ["$4", "$12", "$9", "$18", "$13"], "Clean water": ["$15", "$5", "$11", "$11", "$13"]}, "row_num": 6, "column_num": 3, "solution": "Find the Clean water column. Find the numbers in this column for Eve and Eli.\n\nEve: $15.00\nEli: $5.00\n\nNow subtract:\n\n$15.00 \u2212 $5.00 = $10.00\n\nEve donated $10 more to clean water than Eli.", "ques_type": "free_text", "ans_type": "integer_number", "grade": 5, "split": "test"}, "modules:input": "Table:\nPerson | Animal rights | Clean water\nEve | $4 | $15\nEli | $12 | $5\nBridgette | $9 | $11\nKamal | $18 | $11\nJanelle | $13 | $13\n\nQuestion: A philanthropic organization compared the amounts of money that its members donated to certain causes. How much more money did Eve donate to clean water than Eli?\n\nModules: ", "modules:output": ["column_lookup", "program_generator_and_verifier", "program_executor", "answer_generator"], "column_lookup:input": "Question: A philanthropic organization compared the amounts of money that its members donated to certain causes. How much more money did Eve donate to clean water than Eli?\n\nTable:\n\nPerson | Animal rights | Clean water\nEve | $4 | $15\nEli | $12 | $5\nBridgette | $9 | $11\nKamal | $18 | $11\nJanelle | $13 | $13\n\nSimplified Table:\n", "column_lookup:output": "Person | Clean water\nEve | $15\nEli | $5\nBridgette | $11\nKamal | $11\nJanelle | $13", "program": "donations = {\"Eve\": 15, \"Eli\": 5, \"Bridgette\": 11, \"Kamal\": 11, \"Janelle\": 13}\neve_donation = donations[\"Eve\"]\neli_donation = donations[\"Eli\"]\nans = eve_donation - eli_donation", "program_generator_and_verifier:input": "Read the following table regarding Donations and then write Python code to answer a question:\n\nPerson | Clean water\nEve | $15\nEli | $5\nBridgette | $11\nKamal | $11\nJanelle | $13\n\nA philanthropic organization compared the amounts of money that its members donated to certain causes. How much more money did Eve donate to clean water than Eli? (Unit: $)\n\n# Python Code, return 'ans'. Make sure that 'ans' is a number", "program_generator_and_verifier:output": "donations = {\"Eve\": 15, \"Eli\": 5, \"Bridgette\": 11, \"Kamal\": 11, \"Janelle\": 13}\neve_donation = donations[\"Eve\"]\neli_donation = donations[\"Eli\"]\nans = eve_donation - eli_donation", "program_executor:output": 10, "answer_generator:input": 10, "answer_generator:output": 10.0, "prediction": 10.0, "prediction_norm": 10.0, "answer_norm": 10.0, "true_false": true}
{"pid": "416", "example": {"question": "Vijay has $9.00. Does he have enough to buy a book about music and a book about hiking?", "choices": ["yes", "no"], "answer": "no", "unit": null, "table_title": null, "table": "book about hiking | $9.00\nbook about outer space | $2.00\nbook about animals | $5.00\nbook about music | $2.00", "table_for_pd": {"Column 1": ["book about hiking", "book about outer space", "book about animals", "book about music"], "Column 2": ["$9.00", "$2.00", "$5.00", "$2.00"]}, "row_num": 4, "column_num": 2, "solution": "Add the price of a book about music and the price of a book about hiking:\n\n$2.00 + $9.00 = $11.00\n\n$11.00 is more than $9.00. Vijay does not have enough money.", "ques_type": "multi_choice", "ans_type": "boolean_text", "grade": 3, "split": "test"}, "modules:input": "Table:\nbook about hiking | $9.00\nbook about outer space | $2.00\nbook about animals | $5.00\nbook about music | $2.00\n\nQuestion: Vijay has $9.00. Does he have enough to buy a book about music and a book about hiking?\n\nModules: ", "modules:output": ["row_lookup", "program_generator_and_verifier", "program_executor", "answer_generator"], "row_lookup:input": null, "row_lookup:output": "book about hiking | $9.00\nbook about outer space | $2.00\nbook about animals | $5.00\nbook about music | $2.00", "program": "book_hiking_price = 9.00\nbook_music_price = 2.00\ntotal_money = 9.00\nif total_money >= book_hiking_price + book_music_price:\n    ans = 'yes'\nelse:\n    ans = 'no'", "program_generator_and_verifier:input": "Read the following table and then write Python code to answer a question:\n\nbook about hiking | $9.00\nbook about outer space | $2.00\nbook about animals | $5.00\nbook about music | $2.00\n\nVijay has $9.00. Does he have enough to buy a book about music and a book about hiking? Please select from the following options: ['yes', 'no'].\n\n# Python Code, return 'ans'. Make sure that 'ans' is a string selected from the options in the question", "program_generator_and_verifier:output": "book_hiking_price = 9.00\nbook_music_price = 2.00\ntotal_money = 9.00\nif total_money >= book_hiking_price + book_music_price:\n    ans = 'yes'\nelse:\n    ans = 'no'", "program_executor:output": "no", "answer_generator:input": "no", "answer_generator:output": "no", "prediction": "no", "prediction_norm": "no", "answer_norm": "no", "true_false": true}
{"pid": "418", "example": {"question": "A stock broker followed the stock prices of a certain set of companies. How much more did Computer Data Company's stock cost on Wednesday than on Thursday?", "choices": null, "answer": "8", "unit": "$", "table_title": "Stock prices", "table": "Company | Wednesday | Thursday\nHouston Sporting Goods | $1 | $17\nComputer Data Company | $17 | $9\nWatson and Partners | $20 | $19", "table_for_pd": {"Company": ["Houston Sporting Goods", "Computer Data Company", "Watson and Partners"], "Wednesday": ["$1", "$17", "$20"], "Thursday": ["$17", "$9", "$19"]}, "row_num": 4, "column_num": 3, "solution": "Find the Computer Data Company row. Find the numbers in this row for Wednesday and Thursday.\n\nWednesday: $17.00\nThursday: $9.00\n\nNow subtract:\n\n$17.00 \u2212 $9.00 = $8.00\n\nComputer Data Company's stock cost $8 more on Wednesday than on Thursday.", "ques_type": "free_text", "ans_type": "integer_number", "grade": 5, "split": "test"}, "modules:input": "Table:\nCompany | Wednesday | Thursday\nHouston Sporting Goods | $1 | $17\nComputer Data Company | $17 | $9\nWatson and Partners | $20 | $19\n\nQuestion: A stock broker followed the stock prices of a certain set of companies. How much more did Computer Data Company's stock cost on Wednesday than on Thursday?\n\nModules: ", "modules:output": ["column_lookup", "program_generator_and_verifier", "program_executor", "answer_generator"], "column_lookup:input": null, "column_lookup:output": "Company | Wednesday | Thursday\nHouston Sporting Goods | $1 | $17\nComputer Data Company | $17 | $9\nWatson and Partners | $20 | $19", "program": "wednesday_prices = [1, 17, 20]\nthursday_prices = [17, 9, 19]\ndifference = wednesday_prices[1] - thursday_prices[1]\nans = difference", "program_generator_and_verifier:input": "Read the following table regarding Stock prices and then write Python code to answer a question:\n\nCompany | Wednesday | Thursday\nHouston Sporting Goods | $1 | $17\nComputer Data Company | $17 | $9\nWatson and Partners | $20 | $19\n\nA stock broker followed the stock prices of a certain set of companies. How much more did Computer Data Company's stock cost on Wednesday than on Thursday? (Unit: $)\n\n# Python Code, return 'ans'. Make sure that 'ans' is a number", "program_generator_and_verifier:output": "wednesday_prices = [1, 17, 20]\nthursday_prices = [17, 9, 19]\ndifference = wednesday_prices[1] - thursday_prices[1]\nans = difference", "program_executor:output": 8, "answer_generator:input": 8, "answer_generator:output": 8.0, "prediction": 8.0, "prediction_norm": 8.0, "answer_norm": 8.0, "true_false": true}
{"pid": "462", "example": {"question": "Brenda purchased 1.1 pounds of coarse gravel. What was the total cost?", "choices": null, "answer": "3.30", "unit": "$", "table_title": null, "table": "fine gravel | $2 per lb\npebbles | $3 per lb\nblack sand | $3 per lb\nrocks | $3 per lb\ncoarse gravel | $3 per lb\nwhite sand | $5 per lb", "table_for_pd": {"Column 1": ["fine gravel", "pebbles", "black sand", "rocks", "coarse gravel", "white sand"], "Column 2": ["$2 per lb", "$3 per lb", "$3 per lb", "$3 per lb", "$3 per lb", "$5 per lb"]}, "row_num": 6, "column_num": 2, "solution": "Find the cost of the coarse gravel. Multiply the price per pound by the number of pounds.\n$3 \u00d7 1.1 = $3.30\nThe total cost was $3.30.", "ques_type": "free_text", "ans_type": "decimal_number", "grade": 6, "split": "test"}, "modules:input": "Table:\nfine gravel | $2 per lb\npebbles | $3 per lb\nblack sand | $3 per lb\nrocks | $3 per lb\ncoarse gravel | $3 per lb\nwhite sand | $5 per lb\n\nQuestion: Brenda purchased 1.1 pounds of coarse gravel. What was the total cost?\n\nModules: ", "modules:output": ["row_lookup", "program_generator_and_verifier", "program_executor", "answer_generator"], "row_lookup:input": null, "row_lookup:output": "fine gravel | $2 per lb\npebbles | $3 per lb\nblack sand | $3 per lb\nrocks | $3 per lb\ncoarse gravel | $3 per lb\nwhite sand | $5 per lb", "program": "coarse_gravel_cost_per_lb = 3\npounds_of_coarse_gravel = 1.1\nans = coarse_gravel_cost_per_lb * pounds_of_coarse_gravel", "program_generator_and_verifier:input": "Read the following table and then write Python code to answer a question:\n\nfine gravel | $2 per lb\npebbles | $3 per lb\nblack sand | $3 per lb\nrocks | $3 per lb\ncoarse gravel | $3 per lb\nwhite sand | $5 per lb\n\nBrenda purchased 1.1 pounds of coarse gravel. What was the total cost? (Unit: $)\n\n# Python Code, return 'ans'. Make sure that 'ans' is a number", "program_generator_and_verifier:output": "coarse_gravel_cost_per_lb = 3\npounds_of_coarse_gravel = 1.1\nans = coarse_gravel_cost_per_lb * pounds_of_coarse_gravel", "program_executor:output": 3.3000000000000003, "answer_generator:input": 3.3000000000000003, "answer_generator:output": 3.3000000000000003, "prediction": 3.3000000000000003, "prediction_norm": 3.3, "answer_norm": 3.3, "true_false": true}
{"pid": "529", "example": {"question": "Jordan has two dogs, Sprinkles and Champ. He is concerned because Sprinkles keeps eating Champ's food. Jordan asks their vet how much each dog's weight has changed since their last visit. Which dog's weight has changed the most?", "choices": ["Sprinkles", "Champ"], "answer": "Champ", "unit": null, "table_title": null, "table": "Dog | Weight change (oz.)\nSprinkles | 5\nChamp | -6", "table_for_pd": {"Dog": ["Sprinkles", "Champ"], "Weight change (oz.)": ["5", "-6"]}, "row_num": 3, "column_num": 2, "solution": "To find which dog's weight changed the most, use absolute value. Absolute value tells you how much each dog's weight has changed.\nSprinkles: |5| = 5\nChamp: |-6| = 6\nChamp's weight has changed the most. He has lost 6 ounces.", "ques_type": "multi_choice", "ans_type": "extractive_text", "grade": 6, "split": "test"}, "modules:input": "Table:\nDog | Weight change (oz.)\nSprinkles | 5\nChamp | -6\n\nQuestion: Jordan has two dogs, Sprinkles and Champ. He is concerned because Sprinkles keeps eating Champ's food. Jordan asks their vet how much each dog's weight has changed since their last visit. Which dog's weight has changed the most?\n\nModules: ", "modules:output": ["solution_generator", "answer_generator"], "solution_generator:input": "Read the following table and then answer a question:\n\nDog | Weight change (oz.)\nSprinkles | 5\nChamp | -6\n\nJordan has two dogs, Sprinkles and Champ. He is concerned because Sprinkles keeps eating Champ's food. Jordan asks their vet how much each dog's weight has changed since their last visit. Which dog's weight has changed the most? Please select from the following options: ['Sprinkles', 'Champ'].\n\nSolution: ", "solution_generator:output": "To determine which dog's weight has changed the most, compare the absolute values of the weight changes for each dog.\n\nSprinkles: 5 oz.\nChamp: 6 oz.\n\nSince 6 oz. is greater than 5 oz., Champ's weight has changed the most. The answer is Champ.", "answer_generator:input": "Champ", "answer_generator:output": "Champ", "prediction": "Champ", "prediction_norm": "champ", "answer_norm": "Champ", "true_false": true}
{"pid": "536", "example": {"question": "Rafi graphed the amount of snow that fell in the last 7 days. What is the median of the numbers?", "choices": null, "answer": "4", "unit": null, "table_title": "Daily snowfall", "table": "Day | Snowfall (inches)\nFriday | 1\nSaturday | 7\nSunday | 8\nMonday | 4\nTuesday | 7\nWednesday | 3\nThursday | 1", "table_for_pd": {"Day": ["Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday"], "Snowfall (inches)": ["1", "7", "8", "4", "7", "3", "1"]}, "row_num": 8, "column_num": 2, "solution": "Read the numbers from the table.\n\n1, 7, 8, 4, 7, 3, 1\n\nFirst, arrange the numbers from least to greatest:\n\n1, 1, 3, 4, 7, 7, 8\n\nNow find the number in the middle.\n\n1, 1, 3, 4, 7, 7, 8\n\nThe number in the middle is 4.\n\nThe median is 4.", "ques_type": "free_text", "ans_type": "integer_number", "grade": 6, "split": "test", "context": "Knowledge:\n- The median is the middle value of a set of numbers when they are arranged in order.\n- To find the median, the numbers must be arranged in ascending or descending order.\n- If there is an odd number of values, the median is the middle number. If there is an even number of values, the median is the average of the two middle numbers."}, "modules:input": "Table:\nDay | Snowfall (inches)\nFriday | 1\nSaturday | 7\nSunday | 8\nMonday | 4\nTuesday | 7\nWednesday | 3\nThursday | 1\n\nQuestion: Rafi graphed the amount of snow that fell in the last 7 days. What is the median of the numbers?\n\nModules: ", "modules:output": ["knowledge_retrieval", "program_generator_and_verifier", "program_executor", "answer_generator"], "knowledge_retrieval:input": "Table:\n\nDay | Snowfall (inches)\nFriday | 1\nSaturday | 7\nSunday | 8\nMonday | 4\nTuesday | 7\nWednesday | 3\nThursday | 1\n\nQuestion: Rafi graphed the amount of snow that fell in the last 7 days. What is the median of the numbers?\n\nKnowledge:\n", "knowledge_retrieval:output": "- The median is the middle value of a set of numbers when they are arranged in order.\n- To find the median, the numbers must be arranged in ascending or descending order.\n- If there is an odd number of values, the median is the middle number. If there is an even number of values, the median is the average of the two middle numbers.", "program": "snowfall = [1, 7, 8, 4, 7, 3, 1]\nsnowfall = sorted(snowfall)\nmiddle1 = (len(snowfall) - 1) // 2\nmiddle2 = len(snowfall) // 2\nans = (snowfall[middle1] + snowfall[middle2]) / 2", "program_generator_and_verifier:input": "Read the following table regarding Daily snowfall and then write Python code to answer a question:\n\nDay | Snowfall (inches)\nFriday | 1\nSaturday | 7\nSunday | 8\nMonday | 4\nTuesday | 7\nWednesday | 3\nThursday | 1\n\nKnowledge:\n- The median is the middle value of a set of numbers when they are arranged in order.\n- To find the median, the numbers must be arranged in ascending or descending order.\n- If there is an odd number of values, the median is the middle number. If there is an even number of values, the median is the average of the two middle numbers.\n\nRafi graphed the amount of snow that fell in the last 7 days. What is the median of the numbers?\n\n# Python Code, return 'ans'. Make sure that 'ans' is a number", "program_generator_and_verifier:output": "snowfall = [1, 7, 8, 4, 7, 3, 1]\nsnowfall = sorted(snowfall)\nmiddle1 = (len(snowfall) - 1) // 2\nmiddle2 = len(snowfall) // 2\nans = (snowfall[middle1] + snowfall[middle2]) / 2", "program_executor:output": 4.0, "answer_generator:input": 4.0, "answer_generator:output": 4.0, "prediction": 4.0, "prediction_norm": 4.0, "answer_norm": 4.0, "true_false": true}
{"pid": "584", "example": {"question": "A school administrator who was concerned about grade inflation looked over the number of straight-A students from year to year. According to the table, what was the rate of change between 2007 and 2008?", "choices": null, "answer": "4", "unit": "students per year", "table_title": "Straight-A students", "table": "Year | Students\n2007 | 41\n2008 | 45\n2009 | 43\n2010 | 44\n2011 | 49", "table_for_pd": {"Year": ["2007", "2008", "2009", "2010", "2011"], "Students": ["41", "45", "43", "44", "49"]}, "row_num": 6, "column_num": 2, "solution": "Plug the numbers into the formula for rate of change and simplify.\nRate of change\n = \\frac{change in value}{change in time}\n = \\frac{45 students - 41 students}{2008 - 2007}\n = \\frac{45 students - 41 students}{1 year}\n = \\frac{4 students}{1 year}\n = 4 students per year\nThe rate of change between 2007 and 2008 was 4 students per year.", "ques_type": "free_text", "ans_type": "integer_number", "grade": 8, "split": "test", "context": "Knowledge:\n- Rate of change is calculated by finding the difference in the values of two data points and dividing by the difference in the corresponding years.\n- In this context, the rate of change would represent the increase or decrease in the number of straight-A students from 2007 to 2008.\n- The rate of change can be positive (increase) or negative (decrease) depending on the direction of the change."}, "modules:input": "Table:\nYear | Students\n2007 | 41\n2008 | 45\n2009 | 43\n2010 | 44\n2011 | 49\n\nQuestion: A school administrator who was concerned about grade inflation looked over the number of straight-A students from year to year. According to the table, what was the rate of change between 2007 and 2008?\n\nModules: ", "modules:output": ["knowledge_retrieval", "program_generator_and_verifier", "program_executor", "answer_generator"], "knowledge_retrieval:input": "Table:\n\nYear | Students\n2007 | 41\n2008 | 45\n2009 | 43\n2010 | 44\n2011 | 49\n\nQuestion: A school administrator who was concerned about grade inflation looked over the number of straight-A students from year to year. According to the table, what was the rate of change between 2007 and 2008?\n\nKnowledge:\n", "knowledge_retrieval:output": "- Rate of change is calculated by finding the difference in the values of two data points and dividing by the difference in the corresponding years.\n- In this context, the rate of change would represent the increase or decrease in the number of straight-A students from 2007 to 2008.\n- The rate of change can be positive (increase) or negative (decrease) depending on the direction of the change.", "program": "# Python Code, return 'ans'. Make sure that 'ans' is a number\nstudents = [41, 45, 43, 44, 49]\nrate_of_change = (students[1] - students[0]) / (2008 - 2007)\nans = rate_of_change", "program_generator_and_verifier:input": "Read the following table regarding Straight-A students and then write Python code to answer a question:\n\nYear | Students\n2007 | 41\n2008 | 45\n2009 | 43\n2010 | 44\n2011 | 49\n\nKnowledge:\n- Rate of change is calculated by finding the difference in the values of two data points and dividing by the difference in the corresponding years.\n- In this context, the rate of change would represent the increase or decrease in the number of straight-A students from 2007 to 2008.\n- The rate of change can be positive (increase) or negative (decrease) depending on the direction of the change.\n\nA school administrator who was concerned about grade inflation looked over the number of straight-A students from year to year. According to the table, what was the rate of change between 2007 and 2008? (Unit: students per year)\n\n# Python Code, return 'ans'. Make sure that 'ans' is a number", "program_generator_and_verifier:output": "# Python Code, return 'ans'. Make sure that 'ans' is a number\nstudents = [41, 45, 43, 44, 49]\nrate_of_change = (students[1] - students[0]) / (2008 - 2007)\nans = rate_of_change", "program_executor:output": 4.0, "answer_generator:input": 4.0, "answer_generator:output": 4.0, "prediction": 4.0, "prediction_norm": 4.0, "answer_norm": 4.0, "true_false": true}
{"pid": "604", "example": {"question": "How much money does Philip need to buy 6 teapots and 2 casserole dishes?", "choices": null, "answer": "268", "unit": "$", "table_title": null, "table": "teapot | $38\ncookbook | $19\napron | $20\nbaking dish | $14\ncasserole dish | $20", "table_for_pd": {"Column 1": ["teapot", "cookbook", "apron", "baking dish", "casserole dish"], "Column 2": ["$38", "$19", "$20", "$14", "$20"]}, "row_num": 5, "column_num": 2, "solution": "Find the cost of 6 teapots.\n\n$38 \u00d7 6 = $228\n\nFind the cost of 2 casserole dishes.\n\n$20 \u00d7 2 = $40\n\nNow find the total cost.\n\n$228 + $40 = $268\n\nPhilip needs $268.", "ques_type": "free_text", "ans_type": "integer_number", "grade": 7, "split": "test"}, "modules:input": "Table:\nteapot | $38\ncookbook | $19\napron | $20\nbaking dish | $14\ncasserole dish | $20\n\nQuestion: How much money does Philip need to buy 6 teapots and 2 casserole dishes?\n\nModules: ", "modules:output": ["program_generator_and_verifier", "program_executor", "answer_generator"], "program": "teapot_price = 38\ncasserole_dish_price = 20\nans = 6 * teapot_price + 2 * casserole_dish_price", "program_generator_and_verifier:input": "Read the following table and then write Python code to answer a question:\n\nteapot | $38\ncookbook | $19\napron | $20\nbaking dish | $14\ncasserole dish | $20\n\nHow much money does Philip need to buy 6 teapots and 2 casserole dishes? (Unit: $)\n\n# Python Code, return 'ans'. Make sure that 'ans' is a number", "program_generator_and_verifier:output": "teapot_price = 38\ncasserole_dish_price = 20\nans = 6 * teapot_price + 2 * casserole_dish_price", "program_executor:output": 268, "answer_generator:input": 268, "answer_generator:output": 268.0, "prediction": 268.0, "prediction_norm": 268.0, "answer_norm": 268.0, "true_false": true}
{"pid": "620", "example": {"question": "Emma has $1.72. Does she have enough to buy a hair tie and a comb?", "choices": ["yes", "no"], "answer": "yes", "unit": null, "table_title": null, "table": "bar of soap | $0.98\ncomb | $0.75\nnail file | $0.51\nhair tie | $0.94\nbottle of hand lotion | $0.93", "table_for_pd": {"Column 1": ["bar of soap", "comb", "nail file", "hair tie", "bottle of hand lotion"], "Column 2": ["$0.98", "$0.75", "$0.51", "$0.94", "$0.93"]}, "row_num": 5, "column_num": 2, "solution": "Add the price of a hair tie and the price of a comb:\n\n$0.94 + $0.75 = $1.69\n\n$1.69 is less than $1.72. Emma does have enough money.", "ques_type": "multi_choice", "ans_type": "boolean_text", "grade": 4, "split": "test"}, "modules:input": "Table:\nbar of soap | $0.98\ncomb | $0.75\nnail file | $0.51\nhair tie | $0.94\nbottle of hand lotion | $0.93\n\nQuestion: Emma has $1.72. Does she have enough to buy a hair tie and a comb?\n\nModules: ", "modules:output": ["row_lookup", "program_generator_and_verifier", "program_executor", "answer_generator"], "row_lookup:input": null, "row_lookup:output": "bar of soap | $0.98\ncomb | $0.75\nnail file | $0.51\nhair tie | $0.94\nbottle of hand lotion | $0.93", "program": "comb_price = 0.75\nhair_tie_price = 0.94\ntotal_money = 1.72\nif total_money > comb_price + hair_tie_price:\n    ans = 'yes'\nelse:\n    ans = 'no'", "program_generator_and_verifier:input": "Read the following table and then write Python code to answer a question:\n\nbar of soap | $0.98\ncomb | $0.75\nnail file | $0.51\nhair tie | $0.94\nbottle of hand lotion | $0.93\n\nEmma has $1.72. Does she have enough to buy a hair tie and a comb? Please select from the following options: ['yes', 'no'].\n\n# Python Code, return 'ans'. Make sure that 'ans' is a string selected from the options in the question", "program_generator_and_verifier:output": "comb_price = 0.75\nhair_tie_price = 0.94\ntotal_money = 1.72\nif total_money > comb_price + hair_tie_price:\n    ans = 'yes'\nelse:\n    ans = 'no'", "program_executor:output": "yes", "answer_generator:input": "yes", "answer_generator:output": "yes", "prediction": "yes", "prediction_norm": "yes", "answer_norm": "yes", "true_false": true}
{"pid": "626", "example": {"question": "In a study on public parking, the director of transportation counted the number of cars in each of the city's parking lots. How many parking lots had exactly 44 cars?", "choices": null, "answer": "4", "unit": "parking lots", "table_title": "Cars per parking lot", "table": "Stem | Leaf \n4 | 2, 4, 4, 4, 4", "table_for_pd": {"Stem": ["1", "2", "3", "4", "5", "6", "7", "8"], "Leaf ": ["0", "", "0", "2, 4, 4, 4, 4", "", "", "", "0"]}, "row_num": 9, "column_num": 2, "solution": "For the number 44, the stem is 4, and the leaf is 4. Find the row where the stem is 4. In that row, count all the leaves equal to 4.\n\nYou counted 4 leaves, which are blue in the stem-and-leaf plot above. 4 parking lots had exactly 44 cars.", "ques_type": "free_text", "ans_type": "integer_number", "grade": 6, "split": "test", "context": "Knowledge:\n- This is a stem-leaf plot, which is used to organize numerical data. \n- The stems represent the tens digit of the data values, while the leaves represent the ones digit.\n- The data value 44 would be represented as stem 4 and leaf 4.\n- To find out how many parking lots had exactly 44 cars, we need to count the number of times 44 appears in the data."}, "modules:input": "Table:\nStem | Leaf \n1 | 0\n2 | \n3 | 0\n4 | 2, 4, 4, 4, 4\n5 | \n6 | \n7 | \n8 | 0\n\nQuestion: In a study on public parking, the director of transportation counted the number of cars in each of the city's parking lots. How many parking lots had exactly 44 cars?\n\nModules: ", "modules:output": ["row_lookup", "knowledge_retrieval", "program_generator_and_verifier", "program_executor", "answer_generator"], "row_lookup:input": "Question: In a study on public parking, the director of transportation counted the number of cars in each of the city's parking lots. How many parking lots had exactly 44 cars?\n\nTable:\nStem | Leaf \n1 | 0\n2 | \n3 | 0\n4 | 2, 4, 4, 4, 4\n5 | \n6 | \n7 | \n8 | 0\n\nSimplified Table:\n", "row_lookup:output": "Stem | Leaf \n4 | 2, 4, 4, 4, 4", "knowledge_retrieval:input": "Table:\n\nStem | Leaf \n4 | 2, 4, 4, 4, 4\n\nQuestion: In a study on public parking, the director of transportation counted the number of cars in each of the city's parking lots. How many parking lots had exactly 44 cars?\n\nKnowledge:\n", "knowledge_retrieval:output": "- This is a stem-leaf plot, which is used to organize numerical data. \n- The stems represent the tens digit of the data values, while the leaves represent the ones digit.\n- The data value 44 would be represented as stem 4 and leaf 4.\n- To find out how many parking lots had exactly 44 cars, we need to count the number of times 44 appears in the data.", "program": "stem_leaf = {4: [2, 4, 4, 4, 4]}\nans = stem_leaf[4].count(4)\nans", "program_generator_and_verifier:input": "Read the following table regarding Cars per parking lot and then write Python code to answer a question:\n\nStem | Leaf \n4 | 2, 4, 4, 4, 4\n\nKnowledge:\n- This is a stem-leaf plot, which is used to organize numerical data. \n- The stems represent the tens digit of the data values, while the leaves represent the ones digit.\n- The data value 44 would be represented as stem 4 and leaf 4.\n- To find out how many parking lots had exactly 44 cars, we need to count the number of times 44 appears in the data.\n\nIn a study on public parking, the director of transportation counted the number of cars in each of the city's parking lots. How many parking lots had exactly 44 cars? (Unit: parking lots)\n\n# Python Code, return 'ans'. Make sure that 'ans' is a number", "program_generator_and_verifier:output": "stem_leaf = {4: [2, 4, 4, 4, 4]}\nans = stem_leaf[4].count(4)\nans", "program_executor:output": 4, "answer_generator:input": 4, "answer_generator:output": 4.0, "prediction": 4.0, "prediction_norm": 4.0, "answer_norm": 4.0, "true_false": true}
{"pid": "681", "example": {"question": "How much money does Madelyn need to buy 9 shell necklaces?", "choices": null, "answer": "3.87", "unit": "$", "table_title": null, "table": "pin with a picture of the beach | $0.83\npicture of a shark | $0.87\nsouvenir cup | $0.79\nshell necklace | $0.43\ndolphin bookmark | $0.90", "table_for_pd": {"Column 1": ["pin with a picture of the beach", "picture of a shark", "souvenir cup", "shell necklace", "dolphin bookmark"], "Column 2": ["$0.83", "$0.87", "$0.79", "$0.43", "$0.90"]}, "row_num": 5, "column_num": 2, "solution": "Find the total cost of 9 shell necklaces by multiplying 9 times the price of a shell necklace.\n\n$0.43 \u00d7 9 = $3.87\n\nMadelyn needs $3.87.", "ques_type": "free_text", "ans_type": "decimal_number", "grade": 8, "split": "test"}, "modules:input": "Table:\npin with a picture of the beach | $0.83\npicture of a shark | $0.87\nsouvenir cup | $0.79\nshell necklace | $0.43\ndolphin bookmark | $0.90\n\nQuestion: How much money does Madelyn need to buy 9 shell necklaces?\n\nModules: ", "modules:output": ["row_lookup", "program_generator_and_verifier", "program_executor", "answer_generator"], "row_lookup:input": null, "row_lookup:output": "pin with a picture of the beach | $0.83\npicture of a shark | $0.87\nsouvenir cup | $0.79\nshell necklace | $0.43\ndolphin bookmark | $0.90", "program": "price_of_items = {\n    \"pin with a picture of the beach\": 0.83,\n    \"picture of a shark\": 0.87,\n    \"souvenir cup\": 0.79,\n    \"shell necklace\": 0.43,\n    \"dolphin bookmark\": 0.90\n}\n\nnumber_of_shell_necklaces = 9\nans = price_of_items[\"shell necklace\"] * number_of_shell_necklaces\nans", "program_generator_and_verifier:input": "Read the following table and then write Python code to answer a question:\n\npin with a picture of the beach | $0.83\npicture of a shark | $0.87\nsouvenir cup | $0.79\nshell necklace | $0.43\ndolphin bookmark | $0.90\n\nHow much money does Madelyn need to buy 9 shell necklaces? (Unit: $)\n\n# Python Code, return 'ans'. Make sure that 'ans' is a number", "program_generator_and_verifier:output": "price_of_items = {\n    \"pin with a picture of the beach\": 0.83,\n    \"picture of a shark\": 0.87,\n    \"souvenir cup\": 0.79,\n    \"shell necklace\": 0.43,\n    \"dolphin bookmark\": 0.90\n}\n\nnumber_of_shell_necklaces = 9\nans = price_of_items[\"shell necklace\"] * number_of_shell_necklaces\nans", "program_executor:output": 3.87, "answer_generator:input": 3.87, "answer_generator:output": 3.87, "prediction": 3.87, "prediction_norm": 3.87, "answer_norm": 3.87, "true_false": true}
{"pid": "748", "example": {"question": "At a swim meet, Ernesto noted the size of various swim teams. How many teams have at least 30 swimmers?", "choices": null, "answer": "12", "unit": "teams", "table_title": "Swimming team sizes (number of swimmers)", "table": "Stem | Leaf \n2 | 2, 3, 7, 7\n3 | 2\n4 | 0, 3, 4\n5 | 1, 4, 8\n6 | 2, 2, 4, 5, 9", "table_for_pd": {"Stem": ["2", "3", "4", "5", "6"], "Leaf ": ["2, 3, 7, 7", "2", "0, 3, 4", "1, 4, 8", "2, 2, 4, 5, 9"]}, "row_num": 6, "column_num": 2, "solution": "Count all the leaves in the rows with stems 3, 4, 5, and 6.\n\nYou counted 12 leaves, which are blue in the stem-and-leaf plot above. 12 teams have at least 30 swimmers.", "ques_type": "free_text", "ans_type": "integer_number", "grade": 6, "split": "test", "context": "Knowledge:\n- This is a stem-leaf plot, which is used to organize numerical data. \n- The stems represent the tens digit of the data values, while the leaves represent the ones digit.\n- To find the number of teams with at least 30 swimmers, we need to look at the stems and add up the values that are 3 or higher."}, "modules:input": "Table:\nStem | Leaf \n2 | 2, 3, 7, 7\n3 | 2\n4 | 0, 3, 4\n5 | 1, 4, 8\n6 | 2, 2, 4, 5, 9\n\nQuestion: At a swim meet, Ernesto noted the size of various swim teams. How many teams have at least 30 swimmers?\n\nModules: ", "modules:output": ["row_lookup", "knowledge_retrieval", "program_generator_and_verifier", "program_executor", "answer_generator"], "row_lookup:input": null, "row_lookup:output": "Stem | Leaf \n2 | 2, 3, 7, 7\n3 | 2\n4 | 0, 3, 4\n5 | 1, 4, 8\n6 | 2, 2, 4, 5, 9", "knowledge_retrieval:input": "Table:\n\nStem | Leaf \n2 | 2, 3, 7, 7\n3 | 2\n4 | 0, 3, 4\n5 | 1, 4, 8\n6 | 2, 2, 4, 5, 9\n\nQuestion: At a swim meet, Ernesto noted the size of various swim teams. How many teams have at least 30 swimmers?\n\nKnowledge:\n", "knowledge_retrieval:output": "- This is a stem-leaf plot, which is used to organize numerical data. \n- The stems represent the tens digit of the data values, while the leaves represent the ones digit.\n- To find the number of teams with at least 30 swimmers, we need to look at the stems and add up the values that are 3 or higher.", "program": "stem_leaf = {2: [2, 3, 7, 7], 3: [2], 4: [0, 3, 4], 5: [1, 4, 8], 6: [2, 2, 4, 5, 9]}\nans = 0\nfor stem in stem_leaf.keys():\n    if stem >= 3:\n        ans += len(stem_leaf[stem])\n\nans", "program_generator_and_verifier:input": "Read the following table regarding Swimming team sizes (number of swimmers) and then write Python code to answer a question:\n\nStem | Leaf \n2 | 2, 3, 7, 7\n3 | 2\n4 | 0, 3, 4\n5 | 1, 4, 8\n6 | 2, 2, 4, 5, 9\n\nKnowledge:\n- This is a stem-leaf plot, which is used to organize numerical data. \n- The stems represent the tens digit of the data values, while the leaves represent the ones digit.\n- To find the number of teams with at least 30 swimmers, we need to look at the stems and add up the values that are 3 or higher.\n\nAt a swim meet, Ernesto noted the size of various swim teams. How many teams have at least 30 swimmers? (Unit: teams)\n\n# Python Code, return 'ans'. Make sure that 'ans' is a number", "program_generator_and_verifier:output": "stem_leaf = {2: [2, 3, 7, 7], 3: [2], 4: [0, 3, 4], 5: [1, 4, 8], 6: [2, 2, 4, 5, 9]}\nans = 0\nfor stem in stem_leaf.keys():\n    if stem >= 3:\n        ans += len(stem_leaf[stem])\n\nans", "program_executor:output": 12, "answer_generator:input": 12, "answer_generator:output": 12.0, "prediction": 12.0, "prediction_norm": 12.0, "answer_norm": 12.0, "true_false": true}
